# Nama alur kerja yang akan muncul di GitHub Actions
name: Laravel CI

# Mendefinisikan kapan alur kerja akan dijalankan
on:
  push:
    branches: [ "main", "master", "testing","iterasi1","iterasi2","iterasi3","iterasi4" ]
  pull_request:
    branches: [ "main", "master", "testing","iterasi1","iterasi2","iterasi3","iterasi4" ]

# Sekumpulan pekerjaan yang akan dijalankan
jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: pdo_mysql, mbstring, dom, fileinfo, gd
        tools: composer

    # Langkah baru: Cache Composer dependencies
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Create .env file and configure database
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=laravel_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=" >> .env
      working-directory: ./Src/Backend/Bussiness-travel
      
    - name: Install PHPStan (and Larastan)
      run: composer require --dev phpstan/phpstan larastan/larastan
      
    - name: Install Composer dependencies
      run: composer update 
      working-directory: ./Src/Backend/Bussiness-travel
      
    
      
    - name: Generate application key
      run: php artisan key:generate
      working-directory: ./Src/Backend/Bussiness-travel

    - name: Run database migrations
      run: php artisan migrate --force --seed
      working-directory: ./Src/Backend/Bussiness-travel

    - name: Run tests
      # Jika tests Anda bergantung pada dev dependencies (misalnya, PestPHP),
      # maka melewati dev dependencies mungkin menyebabkan tests gagal.
      # Namun, jika masalahnya hanya pada Pint, ini bisa menjadi solusi sementara.
      run: php artisan test
      working-directory: ./Src/Backend/Bussiness-travel

    - name: Install Phpstan
      run : composer require --dev phpstan/phpstan
      working-directory: ./Src/Backend/Bussiness-travel

    - name: Run Laravel Pint
      run: ./vendor/bin/pint --test


